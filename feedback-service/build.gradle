plugins {
	id 'org.springframework.boot' version '2.1.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'io.freefair.lombok' version '4.0.2'
	id 'java'
}

group = 'ru.mentoring.rise'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

sourceSets {
	unitTest {
		java.srcDir "src/test/unitTest/java"
		resources.srcDir "src/test/unitTest/resources"
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
	integrationTest {
		java.srcDir 'src/test/integrationTest/java'
		resources.srcDir 'src/test/integrationTest/resources'
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

configurations {
	unitTestImplementation.extendsFrom implementation
	unitTestRuntimeOnly.extendsFrom runtimeOnly

	integrationTestImplementation.extendsFrom implementation
	integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

task unitTest(type: Test) {
	description = 'Runs unit tests.'
	group = 'verification'

	testClassesDirs = sourceSets.unitTest.output.classesDirs
	classpath = sourceSets.unitTest.runtimeClasspath
}

task integrationTest(type: Test) {
	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath

}

integrationTest.shouldRunAfter unitTest

task test(type: Test, overwrite:true, dependsOn:['unitTest', 'integrationTest'])

dependencies {
	compile project(':common')

	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.3.0.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Final'

	unitTestImplementation 'org.springframework.boot:spring-boot-starter-test'

	integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
	integrationTestCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0'
}
